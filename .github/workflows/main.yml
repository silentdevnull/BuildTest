# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:        
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x.x'
          
      - name: Build
        shell: bash
        run: |
          echo ${{ github.ref }}
          git describe --tags --abbrev=0
          tag=$(git describe --tags --abbrev=0)
          release_name="App-$tag-${{ matrix.target }}"

          echo $tag
          echo $release_name

          dotnet clean 
          dotnet restore
          
          

          # Build everything
          dotnet publish ./src/buildtest/buildtest.csproj --runtime "${{ matrix.target }}" -c Release -o "$release_name" /p:Version=1.3 -p:PublishSingleFile=true --self-contained true 
          
          # Delete pdb file
          rm -fr $release_name/buildtest.pdb
          
          # Pack files
          
          tar czvf "${release_name}.tar.gz" "$release_name"
          
          ls -la
          ls -la $release_name
          # Delete output directory
          rm -rf "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          tag_name: $(git describe --tags --abbrev=0)
          files: "App*"
          token: ${{ github.TEST }}